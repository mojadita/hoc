#!/usr/local/bin/hoc
/* Funcion de Ackerman:
 * ack(x, y): N -> N
 *
 * ack(0, y) -> y + 1
 * ack(x, 0) -> ack(x - 1, 1)
 * ack(x, y) -> ack(x - 1, ack(x, y - 1))
 */

int n = 0;
symbs;

func int ack(int x, int y) {
    n++;
    if (x == 0) return y + 1;
    if (y == 0) return ack(x - 1, 1);
    return ack(x - 1, ack(x, y - 1));
}
int a = 3, b = 10;
proc ackerman() {
    print  "ack(", a, ", ", b, ") -> ", ack(a, b), "\n";
    print n, " calls to 'ack'\n";
}
{
    ackerman();
    list;
    symbs;
}
/* ack(1, 1) -> ack(0, ack(1, 0)) -> ack(0, 2) -> 3
 * ack(1, 0) -> ack(0, 1) -> 2
 * ack(0, 1) -> 2
 * ack(0, 2) -> 3
 */
