/* Funcion de Ackerman:
 * ack(x, y): N -> N
 *
 * ack(0, y) -> y + 1
 * ack(x, 0) -> ack(x - 1, 1)
 * ack(x, y) -> ack(x - 1, ack(x, y - 1))
 */
func ack() {
    n = n + 1;
    if ($1 == 0) return $2 + 1;
    if ($2 == 0) return ack($1 - 1, 1);
    return ack($1 - 1, ack($1, $2 - 1));
}
{   list;
    n=0;
    c = ack(a = 3, b = 3);
    #print  "ack(", a, ", ", b, ") -> ", c, "\n";
    #print n, " calls to 'ack'\n";
}
n
c
/* ack(1, 1) -> ack(0, ack(1, 0)) -> ack(0, 2) -> 3
 * ack(1, 0) -> ack(0, 1) -> 2
 * ack(0, 1) -> 2
 * ack(0, 2) -> 3
 */
